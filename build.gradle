/**───────────────────────────────────────────────────────────────────────────────────**/
buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
/**───────────────────────────────────────────────────────────────────────────────────**/
apply plugin: 'net.minecraftforge.gradle.forge'

def minecraft_major = minecraft_version.substring(0, minecraft_version.lastIndexOf("."))

version = "${minecraft_major}-${mod_version}"
group = "terrails.${mod_name}".toLowerCase()
archivesBaseName = "${mod_name}"

minecraft {
    version = "${minecraft_version}-${forge_version}"
    mappings = "${mappings_version}"
    runDir = "run"

    replace "@VERSION@", project.version
    replace "terracore@[0.0.0,);", "terracore@[${terracore_version},);"
}

repositories {
    maven {
        url 'http://maven.blamejared.com'
    }
}

dependencies {
    deobfCompile(group: "terrails.terracore", name: "TerraCore", version: "${minecraft_major}-${terracore_version}")
}


processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

sourceCompatibility = targetCompatibility = '1.8'
sourceCompatibility = targetCompatibility = '1.8'

/** Cleans old SNAPSHOT versions of TerraCore since IntelliJ
 is sometimes being stupid and uses older version for libraries **/
task cleanTerraCore(type: Delete) {
    dependsOn 'deobfCompileDeobfDepTask0'
    dependsOn 'deobfCompileRemapDepSourcesTask1'
    doLast {
        def dirName = new File("${gradle.gradleUserHomeDir}/caches/minecraft/deobfedDeps/deobf/terrails/terracore/TerraCore")
        dirName.eachDir { dir ->
            configurations.deobfCompile.resolvedConfiguration.firstLevelModuleDependencies.each {
                if (dir.name.contains("SNAPSHOT") && it.moduleName.contains("TerraCore")) {
                    if (!dir.name.contains(it.moduleVersion)) {
                        delete(dir)
                    }
                }
            }
        }
    }
}